# version: '3'
# services:
#   mysql-db:
#     image: mysql:latest
#     container_name: devops-db
#     ports:
#       - "3306:3306"
#     restart: always
#     environment:
#       - MYSQL_ALLOW_EMPTY_PASSWORD=yes
#       - MYSQL_DATABASE=devops_project_db
#     volumes:
#       - ./data.sql:/docker-entrypoint-initdb.d/data.sql
#     networks:
#       - my-network
#   spring-boot-app:
#     image: samarbouzezi/devops_project:spring
#     container_name: devops_project_spring
#     ports:
#       - "8082:8082"
#     restart: always
#     depends_on:
#       - mysql-db
#     environment:
#       - SPRING_DATASOURCE_URL=jdbc:mysql://devops-db:3306/devops_project_db?&createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#       - SPRING_DATASOURCE_USERNAME=root
#       - SPRING_DATASOURCE_PASSWORD=
#     networks:
#       - my-network
#   angular-app:
#     image: samarbouzezi/devops_project:angular
#     container_name: devops_project_angular
#     ports:
#       - "4200:80"
#     restart: always
#     depends_on:
#       - spring-boot-app
#     networks:
#       - my-network
# networks:
#   my-network:
version: "3"

services:
  mysql-db:
    image: mysql:latest
    container_name: devops-db
    ports:
      - "3308:3306"
    restart: always
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=mydatabase
    volumes:
      - ./data.sql:/docker-entrypoint-initdb.d/data.sql
    networks:
      - my-network

  spring-boot-app:
    image: samarbouzezi/devops_project:spring
    container_name: devops_project_spring

    ports:
      - "8088:8082"
    restart: always
    depends_on:
      - mysql-db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3308/mydatabase?createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
    networks:
      - my-network

  angular-app:
    image: samarbouzezi/devops_project:angular
    container_name: devops_project_angular

    ports:
      - "4208:80"
    restart: always
    depends_on:
      - spring-boot-app
    networks:
      - my-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus

    ports:
      - "9098:9090"
    restart: always
    networks:
      - my-network
    command: ["sh", "-c", "tee -a /etc/prometheus/prometheus.yml <<EOF\n- job_name: jenkins\n  metrics_path: /prometheus\n  static_configs:\n    - targets: ['192.168.153.128:8080']\nEOF"]

  grafana:
    image: grafana/grafana
    container_name: grafana

    ports:
      - "3008:3000"
    restart: always
    networks:
      - my-network

networks:
  my-network:
